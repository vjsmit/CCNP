
  Loop prevention mechanism in BGP:
     route learned by ibgp is not forwaded to next ibgp neigh to prevent loop
     1) Full Mesh 
     2) Route Reflector
     3) Confederation
  
  
BGP maintain 3 tables:
  1) Neigh (sh ip bgp summ)
  2) BGP - contains best route from neigh with attributes (sh ip bgp) * - valid route, > - Best Path
  3) Routing (sh ip route bgp) 
  
sh tcp brief
    server-client relationship
    Jo connection initiate karta hai is client and the one who reply back is server (179)
    If connection is initiated at same time then higher router id will become client
 
  
  EBGP - By default, we can create neigh relationship only with directly connected router as TTL value in TCP packet is 1
         ebgp multihop & TTL Security : We can increase TTL value
         disable connected check : command we use when we are sure that next router hi hai. Here, also TTL value is 1
         
         router bgp 200
         neigh 4.4.4.4 update-source lo 5  (To update the exit interface)
         
         ebgp multihop: 
                router bgp 100
                neigh 5.5.5.5 ebgp-multihop 3
         ttl security (it controls incoming traffic as well)
                router bgp 100
                neigh 5.5.5.5 ttl-security hops 3
                
                
         
         
  BGP Best Path selection:
  Best path selection prerequisites:
      1) next hop value must be in the routing table
      2) synch rule must be disabled or met: Legacy method (bgp route must be learnt via ibgp also). By default, this rule is off now a days.
      3) AS path must not contain Local-AS:
            Normal EBGP loop prevention
            Can be disabled with allow-as in
      4) First ASN in path must be neighbor's ASN: bgp enforce-first-as command
  
  Best path selection order:
  
  BGP uses attribute to decide the best path.
  
  BGP Path categories: 1)Well-Known Mandatory - Origin, AS_Path, Next_HOP
                       2)Well-Known discretionary - Locl_Pref, Atomic_Aggregate
                       3)Optional transitive - Aggregator, Community
                       4)Optional non-transitive - MED, Originator_ID, Cluster list, Multiprotocol Reachable NLRI, Multiprotocol Unreachable NLRI
                       
                       BGP weight attribute
      Checking Order                 
         1) Weight (Cisco propritery, Higher is better, Locally significant)
         2) Local Pref (Higher, Not advertised to ebgp peers, carried through confederation ebgp)
         3) Locally Orginated (gets weight of 32768)
         4) AS-Path (smaller is better) : bgp bestpath as-path ignore (if we want to skip)
         5) Origin (I>E>?)  I - network stat, ? - Redistribute
         6) MED - (Smaller, ompared bw same provider by default)
         7) EBGP over IBGP
         8) IGP Metric to Next-HOP : bgp best path as-path multipath-relax (if we want to skip AS-path checking and do multipathing)
         
     Tie Breakers:
          Oldest>Lowest RID>Shortest cluster list>Lowest Neigh Add
        
         
         
-
